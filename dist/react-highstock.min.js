!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("highstock"),require("react/addons")):"function"==typeof define&&define.amd?define(["highstock","react/addons"],e):"object"==typeof exports?exports.ReactHighstock=e(require("highstock"),require("react/addons")):t.ReactHighstock=e(t.Highstock,t.React)}(this,function(t,e){return function(t){function e(o){if(r[o])return r[o].exports;var n=r[o]={exports:{},id:o,loaded:!1};return t[o].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){"use strict";var o=r(1),n=r(2),c=n.addons.update;console.log("FOLEY!!!"),t.exports=n.createClass({displayName:"Highstock",renderChart:function(){if(!this.props.config)throw new Error("Config has to be specified, for the Highchart component");var t=this.props.config,e=this.refs.chart.getDOMNode();t.chart||(t=c(t,{chart:{$set:{}}})),t=c(t,{chart:{renderTo:{$set:e}}}),this.chart=new o.Chart(t)},getChart:function(){if(!this.chart)throw new Error("getChart() should not be called before the component is mounted");return this.chart},componentDidMount:function(){this.renderChart()},componentDidUpdate:function(){this.renderChart()},render:function(){return n.createElement("div",{className:"chart",ref:"chart"})}}),t.exports.Highstock=o},function(e,r){e.exports=t},function(t,r){t.exports=e}])});